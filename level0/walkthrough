# level0

In level0 we have a bin 'level0' with suid of root
on running it, it throw Segfault
on running it with "helo", it print "No !"
this mean there's an comparison check somewhere
on using `gdb` on the bin, we see that there's an cmp to a value in main

```sh
[...]
08048ec0 <main>:
 8048ec0:       55                      push   %ebp
 8048ec1:       89 e5                   mov    %esp,%ebp
 8048ec3:       83 e4 f0                and    $0xfffffff0,%esp
 8048ec6:       83 ec 20                sub    $0x20,%esp
 8048ec9:       8b 45 0c                mov    0xc(%ebp),%eax
 8048ecc:       83 c0 04                add    $0x4,%eax
 8048ecf:       8b 00                   mov    (%eax),%eax
 8048ed1:       89 04 24                mov    %eax,(%esp)
 8048ed4:       e8 37 08 00 00          call   8049710 <atoi>
 8048ed9:       3d a7 01 00 00          cmp    $0x1a7,%eax
 8048ede:       75 78                   jne    8048f58 <main+0x98>
 8048ee0:       c7 04 24 48 53 0c 08    movl   $0x80c5348,(%esp)
 8048ee7:       e8 04 7d 00 00          call   8050bf0 <__strdup>
 8048eec:       89 44 24 10             mov    %eax,0x10(%esp)
 8048ef0:       c7 44 24 14 00 00 00    movl   $0x0,0x14(%esp)
 8048ef7:       00 
 8048ef8:       e8 83 b7 00 00          call   8054680 <__getegid>
 8048efd:       89 44 24 1c             mov    %eax,0x1c(%esp)
 8048f01:       e8 6a b7 00 00          call   8054670 <__geteuid>
 8048f06:       89 44 24 18             mov    %eax,0x18(%esp)
 8048f0a:       8b 44 24 1c             mov    0x1c(%esp),%eax
 8048f0e:       89 44 24 08             mov    %eax,0x8(%esp)
 8048f12:       8b 44 24 1c             mov    0x1c(%esp),%eax
 8048f16:       89 44 24 04             mov    %eax,0x4(%esp)
 8048f1a:       8b 44 24 1c             mov    0x1c(%esp),%eax
 8048f1e:       89 04 24                mov    %eax,(%esp)
 8048f21:       e8 da b7 00 00          call   8054700 <__setresgid>
 8048f26:       8b 44 24 18             mov    0x18(%esp),%eax
 8048f2a:       89 44 24 08             mov    %eax,0x8(%esp)
 8048f2e:       8b 44 24 18             mov    0x18(%esp),%eax
 8048f32:       89 44 24 04             mov    %eax,0x4(%esp)
 8048f36:       8b 44 24 18             mov    0x18(%esp),%eax
 8048f3a:       89 04 24                mov    %eax,(%esp)
 8048f3d:       e8 4e b7 00 00          call   8054690 <__setresuid>
 8048f42:       8d 44 24 10             lea    0x10(%esp),%eax
 8048f46:       89 44 24 04             mov    %eax,0x4(%esp)
 8048f4a:       c7 04 24 48 53 0c 08    movl   $0x80c5348,(%esp)
 8048f51:       e8 ea b6 00 00          call   8054640 <execv>
 8048f56:       eb 28                   jmp    8048f80 <main+0xc0>
 8048f58:       a1 70 e1 0e 08          mov    0x80ee170,%eax
 8048f5d:       89 c2                   mov    %eax,%edx
 8048f5f:       b8 50 53 0c 08          mov    $0x80c5350,%eax
 8048f64:       89 54 24 0c             mov    %edx,0xc(%esp)
 8048f68:       c7 44 24 08 05 00 00    movl   $0x5,0x8(%esp)
 8048f6f:       00 
 8048f70:       c7 44 24 04 01 00 00    movl   $0x1,0x4(%esp)
 8048f77:       00 
 8048f78:       89 04 24                mov    %eax,(%esp)
 8048f7b:       e8 b0 12 00 00          call   804a230 <_IO_fwrite>
 8048f80:       b8 00 00 00 00          mov    $0x0,%eax
 8048f85:       c9                      leave  
 8048f86:       c3                      ret    
 8048f87:       90                      nop
 8048f88:       90                      nop
 8048f89:       90                      nop
 8048f8a:       90                      nop
 8048f8b:       90                      nop
 8048f8c:       90                      nop
 [...]
```

we can see here that there's an cmp instruction call on value $0x1a7 (423)

```sh
[...]
 8048ed9:       3d a7 01 00 00          cmp    $0x1a7,%eax
[...]
```

upon running

```sh
>./level0 423
$ 
```

it spawn us an `sh` running as level1

```sh
$ whoami
level1
```

with this we can try to navigate to /home/level1

but it doesn't work...

checking

```sh
$ pwd
/home/user/level0
```

ahh

```sh
$ cd /home/user/level1
$ pwd
/home/user/level1
```

bingo!

```sh
$ ls -A                                                                                                        
.bash_logout  .bashrc  level1  .pass  .profile 
```

and

```sh
$ cat .pass                                                                                                    
1fe8a524fa4bec01ca4ea2a869af2a02260d4a7d5fe7e7c24d8617e6dca12d3a 
```

done
